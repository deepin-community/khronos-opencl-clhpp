ifneq (,$(filter $(DEB_HOST_ARCH),i386 amd64))
ARCHFLAGS	+= -msse2 -msse
endif
CLINCPATH	 = ../../include
CFLAGS		+= -I$(CLINCPATH) $(OPENCLFLAGS) $(ARCHFLAGS)
CXXFLAGS	+= -I$(CLINCPATH) $(OPENCLFLAGS) $(ARCHFLAGS)

OPENCL_CLHPP_FLAGS_1_0 = -DCL_HPP_TARGET_OPENCL_VERSION=100 -DCL_HPP_MINIMUM_OPENCL_VERSION=100
OPENCL_CLHPP_FLAGS_1_1 = -DCL_HPP_TARGET_OPENCL_VERSION=110 -DCL_HPP_MINIMUM_OPENCL_VERSION=110
OPENCL_CLHPP_FLAGS_1_2 = -DCL_HPP_TARGET_OPENCL_VERSION=120 -DCL_HPP_MINIMUM_OPENCL_VERSION=120
OPENCL_CLHPP_FLAGS_2_0 = -DCL_HPP_TARGET_OPENCL_VERSION=200 -DCL_HPP_MINIMUM_OPENCL_VERSION=200
OPENCL_CLHPP_FLAGS_2_1 = -DCL_HPP_TARGET_OPENCL_VERSION=210 -DCL_HPP_MINIMUM_OPENCL_VERSION=210
OPENCL_CLHPP_FLAGS_2_2 = -DCL_HPP_TARGET_OPENCL_VERSION=220 -DCL_HPP_MINIMUM_OPENCL_VERSION=220
OPENCL_CLHPP_FLAGS_3_0 = -DCL_HPP_TARGET_OPENCL_VERSION=300 -DCL_HPP_MINIMUM_OPENCL_VERSION=300

check:
	$(MAKE) compile_cl_hpp
	$(MAKE) compile_cl_hpp OPENCLFLAGS="$(OPENCL_CLHPP_FLAGS_1_0)"
	$(MAKE) compile_cl_hpp OPENCLFLAGS="$(OPENCL_CLHPP_FLAGS_1_1)"
	$(MAKE) compile_cl_hpp OPENCLFLAGS="$(OPENCL_CLHPP_FLAGS_1_2)"
	$(MAKE) compile_cl_hpp OPENCLFLAGS="$(OPENCL_CLHPP_FLAGS_2_0)"
	$(MAKE) compile_cl_hpp OPENCLFLAGS="$(OPENCL_CLHPP_FLAGS_2_1)"
	$(MAKE) compile_cl_hpp OPENCLFLAGS="$(OPENCL_CLHPP_FLAGS_2_2)"
	$(MAKE) compile_cl_hpp OPENCLFLAGS="$(OPENCL_CLHPP_FLAGS_3_0)"

compile_cl_hpp:
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c opencl_hpp.cpp

clean:
	$(RM) *.o
